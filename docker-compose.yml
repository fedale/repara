version: '3.4'

services:

  database:
    image: postgres:custom
    # command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
      POSTGRES_USER: ${POSTGRES_USER:-symfony}
    volumes:
      - db_data:/var/lib/postgresql/data:rw

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  app:
    environment: 
    - APP_NAME=${APP_NAME}
    - APP_ENV=${APP_ENV}
    - APP_LOCALE=${APP_LOCALE}
    - DEFAULT_TIMEZONE=${DEFAULT_TIMEZONE}
    depends_on:
      - database

  nginx:
    image: nginx
    ports:
      - "80:80"
      - "443:443"
    

  # # https://pentacent.medium.com/nginx-and-lets-encrypt-with-docker-in-less-than-5-minutes-b4b8a60d3a71
  # nginx:
  #   image: nginx:1.15-alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./data/nginx:/etc/nginx/conf.d
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot
  #   command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  # certbot:
  #   image: certbot/certbot
  #   volumes:
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    
volumes:
  db_data: